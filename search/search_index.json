{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Usage","text":"pystru     Provide a quick way to set up the structure of a Python project."},{"location":"#installation","title":"Installation","text":"<pre><code>pip install pystru\n</code></pre>"},{"location":"#usage","title":"Usage","text":""},{"location":"#create-a-tiny-python-project","title":"Create a tiny python project","text":"<pre><code>pystru create --type tiny --name test --demo True\n</code></pre>"},{"location":"#create-a-basic-python-project","title":"Create a basic python project","text":"<pre><code>pystru create --type basic --name test --demo True\n</code></pre>"},{"location":"cli/","title":"CLI","text":"Source code in <code>pystru/cli.py</code> <pre><code>@cli.command(name='create', help='Create a python project.')\n@click.option('--type', default='basic', help='Which kinds of project structure you want to create.')\n@click.option('--name', default='myPythonProject', help='The name for your python project.')\n@click.option('--demo', default=False, help='Create a demo python project.')\ndef create_project(type: str, name: str, demo: bool):\n\n    meta_data.update({\"repo_name\": name})\n\n    if type == 'tiny':\n        s = structure.tiny\n    elif type == 'basic':\n        s = structure.basic\n\n    cf = CreateFoldersAndFiles(templates_dir=templates_dir, meta_data=meta_data, **s)\n    cf.create()\n\n    if demo:\n        create_demo()\n</code></pre>"}]}